{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/배워볼래2/",
    "result": {"data":{"site":{"siteMetadata":{"title":"블로그"}},"markdownRemark":{"id":"9d6fd6d7-316f-5407-b795-e71e35c4abc9","excerpt":"1. 최초 콘텐츠 페인트시간FCP 가중치 10% 처음에 콘텐츠가 표시되는 시간 2. 속도 지수 가중치 10% 시각적으로 표시되는 속도\n주로 스크립트를 통해서 dom을 조작하거나 데이터를 받아오면서 화면을 순차적으로 표시하게 되는데 그 속도를 말함…","html":"<h2>1. <a href=\"https://web.dev/fcp/\">최초 콘텐츠 페인트시간FCP</a> 가중치 10%</h2>\n<p>처음에 콘텐츠가 표시되는 시간</p>\n<h2>2. <a href=\"https://web.dev/speed-index/\">속도 지수</a> 가중치 10%</h2>\n<p>시각적으로 표시되는 속도\n주로 스크립트를 통해서 dom을 조작하거나 데이터를 받아오면서 화면을 순차적으로 표시하게 되는데 그 속도를 말함</p>\n<h2>3. <a href=\"https://web.dev/i18n/ko/lcp/\">가장 큰 콘텐츠가 포함된 페인트(Largest Contentful Paint)</a> 가중치 25%</h2>\n<p>이미지 비디오 배경이미지가 있는 요소 아니면 그냥 블록요소 중\n뷰포트 내에서 보여지는 영역이 가장 큰 요소가 언제 랜더링되는지를 말합니다.</p>\n<h2>4. <a href=\"https://web.dev/i18n/ko/interactive/\">상호 작용까지의 시간</a> 가중치 10%</h2>\n<p>페이지가 완전히 상호작용 가능할때까지의 시간</p>\n<p>5초간 긴작업(50ms 이상의 작업)이 없다면 안정적 상호작용이 가능하다고 본다.</p>\n<h2>5. <a href=\"https://web.dev/i18n/ko/tbt/\">총 차단 시간</a> 가중치 30%</h2>\n<p>사용자 입력으로 부터 페이지가 응답하지 않도록 차단된 시간, 다시 말하면 렉걸린 시간\n여러 긴 작업(50ms 이상)이 있다면, 각 작업의 총 수행시간에서 50ms를 뺀 것을 모두 더한 값</p>\n<h2>6. <a href=\"https://web.dev/i18n/ko/cls/\">누적 레이아웃 이동</a> 가중치 15%</h2>\n<p>갑작스러운 화면변화는 사용자의 예측을 빗나가게 하기때문에 사용자경험을 저해합니다.<br>\n예를들면 로그인 버튼을 눌렀는데 그 사이에 광고가 갑자기 켜지면서 광고버튼을 클릭해서 다른페이지로 이동해버린다면 굉장히 불쾌할 것</p>\n<h2>PRPL패턴, 선택과 집중</h2>\n<ol>\n<li>preload - 미리 로드</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;link rel=\"preload\" as=\"style\" href=\"css/style.css\"></code></pre></div>\n<ol start=\"2\">\n<li>Render 초기화면을 가능한 빨리 랜더링 할 것</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">HTML에 직접 인라인으로 적용하는 방법도 고려 할 수 있다.\n&lt;script> ...중요한 스크립트 &lt;/script>\n&lt;style> ...중요한 css &lt;/style></code></pre></div>\n<p><img src=\"./%EC%B2%AB%ED%8E%98%EC%9D%B4%EC%A7%80.webp\" alt=\"첫페이지\"></p>\n<ol start=\"3\">\n<li>\n<p>Pre-Cache미리 캐시함<br>\n서비스 워커를 사용하여 자주 쓰거나 곧 쓸 자원들을 캐시를 통해 미리 가져오기.</p>\n</li>\n<li>\n<p>Lazy load 혹은 나머지는 지연로드<br>\n용호님…</p>\n</li>\n</ol>\n<h4><a href=\"https://developer.chrome.com/docs/workbox/\">Cache Storage API + Service Workers</a></h4>\n<p><img src=\"./%EC%84%9C%EB%B9%84%EC%8A%A4%20%EC%9B%8C%EC%BB%A4.webp\" alt=\"서비스워커\"></p>\n<ol>\n<li>스크립트로 서비스워커를 실행</li>\n<li>fetch 요청!</li>\n<li>서비스워커에서 가로채서 캐시작업 수행한다. 있으면 주고 없으면 받아서 주고</li>\n</ol>\n<p>workbox라는 서비스워커 라이브러리가 가장 유명하다고 한다.</p>","frontmatter":{"title":"Test","date":"July 29, 2020","description":"This is a custom description for SEO and Open Graph purposes, rather than the default generated excerpt. Simply add a description field to the frontmatter.","tag":"Etc"}},"previous":{"fields":{"slug":"/test/"},"frontmatter":{"title":"test"}},"next":{"fields":{"slug":"/JS정리/"},"frontmatter":{"title":"JS 정리"}}},"pageContext":{"id":"9d6fd6d7-316f-5407-b795-e71e35c4abc9","previousPostId":"f9310d9d-63f7-57c9-a68c-92fd0adf144d","nextPostId":"7bb7d3f7-47d8-5e58-b1a9-0fc1278033da"}},
    "staticQueryHashes": ["2841359383","3257411868"]}